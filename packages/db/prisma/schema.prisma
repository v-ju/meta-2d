
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String  @id @unique @default(cuid())
  username    String  @unique
  googleId    String
  avatarId    String
  role        Role
	space       Space[]
	avatar      Avatar @relation(fields:[avatarId], references:[id])
}

// Every user can have a Multiple spaces, but One single space must have One admin


model Space {
  id            String  @id @unique @default(cuid())
  name          String
  width         Int
  height        Int?
  thumbnail     String?
  creatorId     String
	creator       User @relation(fields:[creatorId], references:[id])
	element       SpaceElements[]
}

model SpaceElements {
  id            String @id @unique @default(cuid())
  elementId     String
  spaceId       String
  x             Int
  y             Int
  element       Element @relation(fields:[elementId], references: [id])
  space         Space @relation(fields:[spaceId], references:[id])
}

model Element {
  id            String @id @unique @default(cuid())
  width         Int
  height        Int
  imageUrl      String
  spaces        SpaceElements[]
  mapElement    MapElements[]
}

model Map {
  id            String  @id @unique @default(cuid())
  width         Int
  height        Int
  name          String
  mapElement    MapElements[]
}

model MapElements {
  id            String  @id @unique @default(cuid())
  mapId         String
  elementId     String
  x             Int?
  y             Int?
  map           Map @relation(fields:[mapId], references:[id])
	element       Element @relation(fields:[elementId], references:[id])
}

model Avatar {
  id          String  @id @unique @default(cuid())
  imageUrl    String?
  name        String?
  user        User[]
  }

enum Role {
  Admin
  User
}

// Map and Elements have a Many to Many reln
// single Element can be a part of multiple Maps & Maps can have multiple Elements
//